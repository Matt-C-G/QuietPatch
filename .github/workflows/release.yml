name: Release

on:
  push:
    branches: [ main, master ]
    tags: ['v*']
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: Tag to build/upload (e.g. v0.4.2). If empty, auto-detect from event.
        required: false
        default: ""

permissions:
  contents: write
  actions: read
  packages: read

jobs:
  build:
    name: Build & Upload
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            py: "3.12"
            BUILD: constraints/build-linux-py312.txt
            RUNTIME: constraints/runtime-linux-py312.txt
          - os: macos-latest
            py: "3.12"
            BUILD: constraints/build-macos-py312.txt
            RUNTIME: constraints/runtime-macos-py312.txt
          - os: windows-latest
            py: "3.12"
            BUILD: constraints/build-windows-py312.txt
            RUNTIME: constraints/runtime-windows-py312.txt

    steps:
      - uses: actions/checkout@v4

      - name: Debug event
        run: |
          echo "EVENT:      ${{ github.event_name }}"
          echo "REF:        ${{ github.ref }}"
          echo "REF_NAME:   ${{ github.ref_name }}"
          echo "SHA:        ${{ github.sha }}"
          echo "RELEASETAG: ${{ github.event.release.tag_name }}"

      - name: Resolve tag to build
        id: tag
        shell: bash
        run: |
          set -euo pipefail
          # 1) workflow_dispatch input
          TAG="${{ github.event.inputs.tag }}"
          # 2) release event
          if [ -z "$TAG" ] && [ "${{ github.event_name }}" = "release" ]; then
            TAG="${{ github.event.release.tag_name }}"
          fi
          # 3) tag push
          if [ -z "$TAG" ] && [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG="${{ github.ref_name }}"
          fi
          echo "TAG=$TAG" | tee -a "$GITHUB_OUTPUT"
          if [ -z "$TAG" ]; then
            echo "::error::Could not determine tag (use workflow_dispatch input)"; exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
          cache: 'pip'
          cache-dependency-path: |
            ${{ matrix.BUILD }}
            ${{ matrix.RUNTIME }}

      - name: Upgrade pip (pin)
        run: python -m pip install --upgrade "pip<25"

      - name: Install build toolchain (no hashes)
        run: |
          python -m pip install -r "${{ matrix.BUILD }}"

      - name: Install runtime deps (hermetic)
        run: |
          python -m pip install --require-hashes -r "${{ matrix.RUNTIME }}"

      - name: Build sdist/wheel
        run: |
          python -m pip install build
          python -m build

      # Example: if you also build PyInstaller apps per-OS, add here

      - name: Upload assets to the Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.TAG }}
          draft: false
          prerelease: false
          files: |
            dist/*.whl
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
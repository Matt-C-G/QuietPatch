name: release-gates
on:
  push:
    tags: ['v*']

jobs:
  gates:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install minimal deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          # if you have a lean runtime list, use that

      - name: Run unit tests
        run: |
          pytest -q tests
          
      - name: Build offline DB fixture if missing
        run: |
          mkdir -p data/db
          # Optional: pull prebuilt snapshot artifact here instead of syncing.
          # echo "using repo-committed small fixture for gates"

      - name: Test database refresh from local feed
        run: |
          # Create a minimal test feed
          python3 tools/make_manifest.py --src data/db --out _feed --version "test-$(date +%F)" --gzip
          # Test the refresh functionality
          python3 qp_cli.py db refresh --mirror "file://$PWD/_feed"
          # Verify files were installed
          test -f data/db/manifest.json

      - name: Selfcheck (strict)
        env:
          QP_OFFLINE: "1"
          QP_DISABLE_AUTO_SYNC: "1"
        run: |
          python tools/selfcheck.py --strict

      - name: Coverage gate: at least 1 affected app
        run: |
          set -e
          python - <<'PY'
          import json, re, sys
          j=json.load(open('data/vuln_log.json'))
          has = sum(1 for a in j if any('cve_id' in str(v) for v in a.get('vulnerabilities', [])))
          print("apps_with_cves:", has)
          sys.exit(0 if has >= 1 else 2)
          PY

name: ci
on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PY_VER: "3.11"

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}
          cache: "pip"
      - name: Install ruff (pinned) with retry
        run: |
          set -eux
          python -m pip install -r requirements.ci.txt
          python -m ruff --version
      - name: Run ruff
        run: |
          ruff check . --fix || true
          ruff format . || true
        env:
          # keep lint fast/sane
          RUFF_CACHE_DIR: .ruff_cache

  unit:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}
          cache: "pip"
      - name: Install project + test deps
        run: |
          set -eux
          python -m pip install -r requirements.ci.txt
          python -m pip install -e .
      - name: Run tests
        run: pytest -q

  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}
          cache: "pip"
      - name: Build wheel
        run: |
          python -m pip install -U pip build wheel setuptools
          python -m build -w -n
          ls -l dist/*.whl
      - name: Build PEX from local wheel (deps from PyPI)
        run: |
          python -m pip install -U pex
          mkdir -p dist-pex
          python -m pex dist/*.whl \
            -c quietpatch \
            --find-links dist \
            --validate-entry-point --no-build \
            --venv prepend --strip-pex-env \
            -o dist-pex/quietpatch-linux-x86_64-py311.pex
      - name: Smoke
        env:
          PEX_ROOT: ${{ github.workspace }}/.pexroot
          TMP: ${{ github.workspace }}/.tmp
          TEMP: ${{ github.workspace }}/.tmp
        run: |
          python3.11 dist-pex/quietpatch-linux-x86_64-py311.pex scan --help >/dev/null
      - uses: actions/upload-artifact@v4
        with:
          name: quietpatch-linux
          path: dist-pex/*

  build-windows:
    name: build-windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: "x64"
          cache: "pip"

      - name: Build wheel
        shell: pwsh
        run: |
          python -m pip install -U pip build wheel setuptools
          python -m build -w -n
          Get-ChildItem dist\*.whl | Format-List

      - name: Build PEX from local wheel (deps from PyPI)
        shell: pwsh
        env:
          # Avoid reading any user/system pexrc, and disable venv logic on Windows
          PEX_IGNORE_RCFILES: "1"
        run: |
          # Pin a PEX version known-good on Windows
          python -m pip install pex==2.53.1
          New-Item -ItemType Directory -Force -Path dist-pex | Out-Null
          $whl = (Get-ChildItem dist\*.whl | Select-Object -First 1).FullName
          py -3.11 -m pex $whl `
            -c quietpatch `
            --find-links dist `
            --no-build `
            --strip-pex-env `
            --venv false `        # <â€” explicitly disable venv features on Windows
            -o dist-pex/quietpatch-win-py311.pex

      - name: Smoke
        shell: pwsh
        env:
          PEX_ROOT: "C:\\pex"
          TMP: "C:\\t"
          TEMP: "C:\\t"
          PEX_IGNORE_RCFILES: "1"
        run: |
          py -3.11 dist-pex\quietpatch-win-py311.pex scan --help >$null

      - uses: actions/upload-artifact@v4
        with:
          name: quietpatch-windows
          path: dist-pex/*

  build-macos:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VER }}
          cache: "pip"
      - name: Build wheel
        run: |
          python -m pip install -U pip build wheel setuptools
          python -m build -w -n
          ls -l dist/*.whl
      - name: Build PEX from local wheel (deps from PyPI)
        run: |
          python -m pip install -U pex
          mkdir -p dist-pex
          python -m pex dist/*.whl \
            -c quietpatch \
            --find-links dist \
            --validate-entry-point --no-build \
            --venv prepend --strip-pex-env \
            -o dist-pex/quietpatch-macos-arm64-py311.pex
      - name: Smoke
        run: |
          python3.11 dist-pex/quietpatch-macos-arm64-py311.pex scan --help >/dev/null
      - uses: actions/upload-artifact@v4
        with:
          name: quietpatch-macos
          path: dist-pex/*
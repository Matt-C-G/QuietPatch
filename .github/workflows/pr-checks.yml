name: PR Checks

on:
  pull_request:
    branches: [ main, master, Quietpatch-update ]
  push:
    branches: [ main, master, Quietpatch-update ]

jobs:
  test:
    name: PR Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
          cache-dependency-path: |
            requirements.ci.txt
            requirements-ci.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.ci.txt -r requirements-ci.txt
          pip install -e .

      - name: Run tests
        run: pytest -q

      - name: Zero-unknowns gate
        shell: bash
        run: |
          set -euo pipefail

          workdir="$(mktemp -d)"
          sarif="$workdir/gate.sarif"

          echo "Running quietpatch scan → SARIF only…"
          if ! quietpatch scan --sarif "$sarif"; then
            echo "::warning::quietpatch scan returned non-zero; continuing to inspect SARIF output"
          fi

          if [ ! -s "$sarif" ]; then
            echo "::error::No SARIF produced by quietpatch"; exit 1
          fi

          if command -v jq >/dev/null 2>&1; then
            unknown_cnt="$(jq '
              [ .runs[]?.results[]?
                | ( .properties?.severity_label? // "" | ascii_downcase )
                | select(. == "unknown")
              ] | length
            ' "$sarif")"
            echo "Unknown findings: $unknown_cnt"
            if [ "${unknown_cnt:-0}" -gt 0 ]; then
              echo "::error::Unknown severities detected ($unknown_cnt). Failing gate."
              # Optional: surface the first few unknowns inline
              jq -r '
                .runs[]?.results[]?
                | select((.properties?.severity_label? // "" | ascii_downcase) == "unknown")
                | "\(.ruleId // \"rule?\") - \(.message.text // \"unknown\")"
              ' "$sarif" | sed 's/^/::notice file=gate.sarif::/'
              exit 1
            fi
          else
            # Fallback without jq
            if grep -qi '"severity_label"[[:space:]]*:[[:space:]]*"unknown"' "$sarif"; then
              echo "::error::Unknown severities detected. Failing gate."; exit 1
            fi
          fi

          echo "Zero-unknowns gate passed ✅"

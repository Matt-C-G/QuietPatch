name: PR Checks

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-ci.txt
        
    - name: Run tests
      run: |
        python -m pytest -v --cov=src --cov-report=xml --cov-report=term-missing
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        
    - name: Run linting
      run: |
        python -m flake8 src/ --max-line-length=100 --extend-ignore=E203,W503
        python -m black --check --diff src/
        python -m mypy src/ --ignore-missing-imports
        
    - name: Build report smoke test
      run: |
        # Create minimal test data
        mkdir -p data
        echo '[]' > data/vuln_log.json
        
        # Test report generation (should not crash)
        PYTHONPATH=. python3 qp_cli.py report -i data/vuln_log.json -o test_report.html
        
        # Verify output exists
        test -f test_report.html && echo "Report generation successful"
        
    - name: Coverage gate
      run: |
        # Fail if coverage drops below 80%
        coverage=$(python -c "import xml.etree.ElementTree as ET; root = ET.parse('coverage.xml'); print(float(root.find('.//coverage').get('line-rate')) * 100)")
        if (( $(echo "$coverage < 80" | bc -l) )); then
          echo "Coverage $coverage% is below 80% threshold"
          exit 1
        fi
        echo "Coverage $coverage% meets threshold"

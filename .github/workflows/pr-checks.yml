name: PR Checks

on:
  pull_request:
    branches: [ main, master, Quietpatch-update ]
  push:
    branches: [ main, master, Quietpatch-update ]

env:
  PYVER: "3.12"
  BUILD_CONSTRAINTS: constraints/build-linux-py312.txt
  RUNTIME_CONSTRAINTS: constraints/runtime-linux-py312.txt

jobs:
  test:
    name: PR Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYVER }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYVER }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.ci.txt
            requirements-ci.txt

      - name: Show effective constraints
        run: |
          echo "Build constraints: ${BUILD_CONSTRAINTS}"
          echo "Runtime constraints: ${RUNTIME_CONSTRAINTS}"
          python -V
          pip -V

      - name: Fail fast if constraints missing
        run: |
          test -f "${BUILD_CONSTRAINTS}" || (echo "Missing build constraints file"; exit 2)
          test -f "${RUNTIME_CONSTRAINTS}" || (echo "Missing runtime constraints file"; exit 2)

      - name: Install build deps (hermetic)
        run: |
          python -m pip install --upgrade pip
          python -m pip install --requirement "${BUILD_CONSTRAINTS}"

      - name: Install app deps (hermetic)
        run: |
          python -m pip install --requirement "${RUNTIME_CONSTRAINTS}" --require-hashes

      - name: Build wheel
        run: |
          python -m build -w -n

      - name: Install from wheel
        run: |
          python -m pip install --no-deps --force-reinstall dist/quietpatch-*.whl

      - name: Run tests
        run: pytest -q

      - name: Zero-unknowns gate (mock, offline, capped)
        shell: bash
        run: |
          set -euo pipefail

          workdir="$(mktemp -d)"
          sarif="$workdir/gate.sarif"

          echo "Running quietpatch scan (mock) → SARIF only…"
          if ! timeout 90s quietpatch scan --mock --offline --fail-unknowns --sarif "$sarif"; then
            echo "::error::Scan failed or exceeded 90s. Failing fast."; exit 1
          fi

          if [ ! -s "$sarif" ]; then
            echo "::error::No SARIF produced by quietpatch"; exit 1
          fi

          echo "Zero-unknowns gate passed ✅"
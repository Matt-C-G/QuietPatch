name: Windows Release + Smoke

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to upload assets to (must exist and be the latest you want)"
        required: true
        default: "v0.2.5"

env:
  QP_OFFLINE: "1"

jobs:
  build-windows-zip:
    name: Build Windows ZIP (standardized)
    runs-on: windows-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install with constraints (hermetic)
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          python -m pip install --require-hashes -r constraints.txt
          python -m pip install build pex

      - name: Build wheel
        shell: powershell
        run: |
          python -m build -w -n

      - name: Build PEX (quietpatch.pex)
        shell: powershell
        run: |
          $whl = Get-ChildItem dist\*.whl | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if (-not $whl) { throw "No wheel found in dist/" }
          python -m pex "$($whl.FullName)" `
            --find-links dist `
            -c quietpatch `
            --no-build `
            --strip-pex-env `
            -o dist\quietpatch.pex

      - name: Prepare launcher
        shell: powershell
        run: |
          Copy-Item -Force packaging\windows\run_quietpatch.bat .

      - name: Create ZIP
        shell: powershell
        run: |
          if (Test-Path dist\quietpatch-windows-x64.zip) { Remove-Item dist\quietpatch-windows-x64.zip -Force }
          Compress-Archive -Force -Path dist\quietpatch.pex, .\run_quietpatch.bat -DestinationPath dist\quietpatch-windows-x64.zip

      - name: SHA256SUMS
        shell: powershell
        run: |
          Set-Location dist
          $h = Get-FileHash quietpatch-windows-x64.zip -Algorithm SHA256
          "$($h.Hash.ToLower())  quietpatch-windows-x64.zip" | Out-File -Encoding ascii -Append SHA256SUMS
          Get-Content SHA256SUMS
          Set-Location ..

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release-assets
          path: |
            dist/quietpatch-windows-x64.zip
            dist/SHA256SUMS

  publish-to-release:
    name: Publish assets to Release
    needs: build-windows-zip
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-release-assets
          path: dist

      - name: Upload to Release (clobber)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ github.event.inputs.tag }}" \
            "dist/quietpatch-windows-x64.zip#quietpatch-windows-x64.zip" \
            "dist/SHA256SUMS#SHA256SUMS" \
            --clobber

      - name: Mark as latest (optional)
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release edit "${{ github.event.inputs.tag }}" --latest

      - name: Sanity check assets on latest
        run: |
          curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest \
            | jq -r '.assets[].name'

  smoke-windows-oneliner:
    name: Windows one-liner smoke
    needs: publish-to-release
    runs-on: windows-latest
    steps:
      - name: One-liner install
        shell: powershell
        run: |
          irm https://raw.githubusercontent.com/${{ github.repository }}/main/install.ps1 | iex

      - name: Install built wheel for testing
        shell: powershell
        run: |
          $wheel = Get-ChildItem -Path dist -Filter *.whl | Select-Object -First 1 -ExpandProperty FullName
          if (!$wheel) { Write-Error "No wheel found in dist/"; exit 1 }
          python -m pip install --no-deps --force-reinstall "$wheel"

      - name: Gate (mock scan with timeout)
        shell: powershell
        env:
          QP_OFFLINE: "1"
        run: |
          $p = Start-Process -FilePath "python" -ArgumentList "-m", "quietpatch.cli", "scan", "--mock", "--offline", "--fail-unknowns", "--sarif", "out.sarif" -PassThru -NoNewWindow
          if (-not $p.WaitForExit(90000)) { $p.Kill(); throw "Gate timed out (>90s)" }
          if ($p.ExitCode -ne 0) { throw "Gate failed with code $($p.ExitCode)" }
          # Verify SARIF exists and is valid
          if (-not (Test-Path "out.sarif") -or (Get-Item "out.sarif").Length -eq 0) {
            throw "SARIF file missing or empty"
          }
          Write-Host "SARIF file size: $((Get-Item 'out.sarif').Length) bytes"

      - name: Upload SARIF
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: out.sarif

      - name: Version check
        shell: powershell
        run: |
          quietpatch --version

